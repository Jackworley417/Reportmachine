import os, smtplib, ssl
import pandas as pd
import numpy as np 
from csv import dictreader
from email import encoders
from email.mime.base import MIMEbase
from email.mine.text import MIMEtext
from email.mime.multipart import MIMEmultipart

def make_a_email(self):
    with open('customers.csv') as readcsv:
        csv_dict_read = dictreader(readcsv)
        for row in csv_dict_read:
         if (1 <= 0):
          receiver_email = customeremail   #<-- Need to find a way to automate the email for the customers receiving this info
          attachment = (customerreportfile + '.csv')
          senders_email = "reports@pcnetinc.com"
          BCC = "jworley@pcnetinc.com"
          message = MIMEmultipart("Alternate")
          message["Subject"] = "PCNet Audit reports"
          message["From"] = senders_email
          message["To"] = receivers_email 
          message["Bcc"] = BCC
    
        #HTML message for the report being sent to clients.
        email = """\
        Hello, (r'customername')
        Here is your PCNet automated report.
        Please contact us at 417-831-1700 for any questions or concerns.
        
        Thank you,
        PCNet Automated Report Team
        PCNet.com
        417-831-1700
        #PCNET logo here
        """
        html = """\
        <html>
          <body>
            <p>Hello,<br>
               Here is your PCNet automated report.
               Please contact us at 417-831-1700 for any questions or concerns<br>
               
               Thank you,
               PCNet Automated Report Team
               417-831-1700
               <a href="http://www.PCNet.com"></a> 
               <img src="PCNETlogo.png" alt="PCNet Logo">
            </p>
          </body>
        </html>
        """
        
        # Turn these into plain/html MIMEText objects
        first_part = MIMEText(email, "plain")
        second_part = MIMEText(html, "html")
        message.attach(part1)
        message.attach(part2)
        
        #This function creates a reliable and secure connection to our mail server
        context = ss.create_default_context()
        with smtplib.SMTP_SSL():
          server.login(senders_email, password)
          server.sendmail(
             senders_mail, receivers_mail, message.as_string ()
             )
