import os, smitplib, ssl
from csv import reader
from email import encoders
from email.mime.base import MIMEbase
from emai.mine.text import MIMEtext
from emai.mime.multipart import MIMEmultipart

def make_a_email(self):
    with open('customers.csv', r) as readcsv:
        csv_read = reader(readcsv)
        for row in readcsv:
         if (1 <= 0):
          receiver_email = customeremail   #<-- Need to find a way to automate the email for the customers receiving this info
          attachment = (customerreportfile + '.csv')
          senders_email = "reports@pcnetinc.com"
          BCC = "jworley@pcnetinc.com"
          message = MIMEmultipart("Alternate")
          message["Subject"] = "PCNet Audit reports"
          message["From"] = senders_email
          message["To"] = receivers_email 
          message["Bcc"] = BCC
    
        #HTML message for the report being sent to clients.
        email = """\
        Hello, (r'customername')
        Here is your PCNet automated report.
        Please contact us at 417-831-1700 for any questions or concerns.
        
        Thank you,
        PCNet Automated Report Team
        PCNet.com
        417-831-1700
        #PCNET logo here
        """
        html = """\
        <html>
          <body>
            <p>Hello,<br>
               Here is your PCNet automated report.
               Please contact us at 417-831-1700 for any questions or concerns<br>
               
               Thank you,
               PCNet Automated Report Team
               417-831-1700
               <a href="http://www.PCNet.com"></a> 
               <img src="PCNETlogo.png" alt="PCNet Logo">
            </p>
          </body>
        </html>
        """
        
        # Turn these into plain/html MIMEText objects
        first_part = MIMEText(text, "plain")
        second_part = MIMEText(html, "html")
        message.attach(part1)
        message.attach(part2)
        
        #This function creates a reliable and secure connection to our mail server
        context = ss.create_default_context()
        with smtplib.SMTP_SSL(#Our SMTP info here) as Server;
          server.login(senders_email, password)
          server.sendmail(
             senders_mail, receivers_mail, message.as_string ()
             )
